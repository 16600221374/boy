<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 第一步：配置数据源 -->
    <context:property-placeholder location="classpath:application.yml" />
    <bean id="dataSource1" class="org.example.datasource.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <bean id="dataSource2" class="org.example.datasource.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url2}"></property>
        <property name="driverClass" value="${jdbc.driver2}"></property>
        <property name="user" value="${jdbc.username2}"></property>
        <property name="password" value="${jdbc.password2}"></property>
    </bean>

    <!-- 配置多数据源 -->
    <bean class="org.example.config.DynamicDataSource" id="dynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="dataSource1" key="dataSource1"></entry>
                <entry value-ref="dataSource2" key="dataSource2"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource1"></property>
    </bean>


    <!-- 创建sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"></property>
    </bean>
    <!-- 配置mybatis接口代理开发
        * 接口类名和映射文件必须同名
        *　接口类和映射文件必须在同一个目录　下
        * 映射文件namespace名字必须是接口的全类路径名
        *　接口的方法名必须和映射Statement的id一致
     -->
    <!--  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="basePackage" value="com.ocean.mapper"></property>
     <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
     </bean> -->

    <!-- 整合通用Mapper所需要做的配置修改： -->
    <!-- 原始全类名：org.mybatis.spring.mapper.MapperScannerConfigurer -->
    <!-- 通用Mapper使用：tk.mybatis.spring.mapper.MapperScannerConfigurer -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ocean.mapper"/>
        <property name="properties">
            <value>
                enumAsSimpleType=true
            </value>
        </property>
    </bean>


    <!-- 事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"></property>
    </bean>

    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager" />


</beans>